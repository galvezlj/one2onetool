# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ staging, release ]

jobs:
  one2onetool:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 15.x
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Setup Environment
      run: |
        echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV && 
        if [ ${GITHUB_REF##*/} = "staging" ]; then ENV="uat"; else ENV="prod"; fi && 
        echo "ENV=${ENV}" >> $GITHUB_ENV
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/one2onetool:${{ env.BRANCH }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: Trigger deploy
      uses: koslib/helm-eks-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        command: |
          helm template helm --set stage=${{ env.BRANCH }} --output-dir . && 
          kubectl apply -f one2onetool/templates/deploy.yaml -f one2onetool/templates/service.yaml && 
          echo "external link:" && 
          kubectl get service -n ${{ env.ENV }} | grep LoadBalancer | tr -s ' ' | cut -d' ' -f 4

    - name: Send mail
      if: failure()
      uses: dawidd6/action-send-mail@v2
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
        body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
        to: andy.galvez@shopback.com,andy_galvez@yahoo.com
        from: Alert         